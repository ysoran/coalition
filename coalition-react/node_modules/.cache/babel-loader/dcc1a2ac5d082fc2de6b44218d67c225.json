{"ast":null,"code":"var _jsxFileName = \"/Users/yasarsoran/Documents/coalition-project/coalition-react/src/components/sign-up/sign-up.tsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Button, Grid, TextField } from '@material-ui/core';\nimport styled from 'styled-components';\nimport axios from 'axios';\nconst StyledInformation = styled.div`\n    padding: 20px;\n    border: 1px solid #aaa;\n    text-align: left;\n    background-color:#eee;\n`;\nconst StyledContainer = styled.div`\n    padding:30px;\n`;\nconst StyledWarning = styled.div`\n    padding:20px;\n    border: 1px solid #aaa;\n    background-color: orange;\n`;\nconst StyledWarningEmail = styled.div`\n    padding:20px;\n    border: 1px solid #aaa;\n    background-color: red;\n    color: white;\n`;\n\nconst SignUp = props => {\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const [signuptried, setSignuptried] = useState(false);\n  const [fieldsWarning, setFieldsWarning] = useState('');\n  const [emailWarning, setEmailWarning] = useState('');\n  const [domainWhiteList, setDomainWhiteList] = useState({});\n  const [agencyData, setAgencyData] = useState({});\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:5000/domain-whitelist\").then(data => {\n      setDomainWhiteList(data);\n      console.debug(\"fetched whitelist domains\");\n    });\n    axios.get(\"http://127.0.0.1:5000/agency\").then(data => {\n      setAgencyData(data);\n      console.debug(\"fetched agency\");\n    });\n  }, []);\n\n  const resetWarnings = () => {\n    setFieldsWarning('');\n    setEmailWarning('');\n  };\n\n  const validateFields = useCallback(() => {\n    let isValid = true;\n    resetWarnings();\n    [firstname, lastname, email, address].forEach(each => {\n      if (!each || each === '') {\n        isValid = false;\n        setFieldsWarning('Please make sure you filled all fields');\n      }\n    });\n    if (!isValid) return isValid;\n\n    if (!/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email)) {\n      isValid = false;\n      setEmailWarning('Please enter a valid email address');\n      return isValid;\n    }\n\n    return isValid;\n  }, [firstname, lastname, email, address]);\n\n  const validateDomain = () => {\n    let isValid = false;\n    let domain = email.split(\"@\")[1];\n    domainWhiteList.data.forEach(each => {\n      if (each.domain === domain) {\n        isValid = true;\n      }\n    });\n    return isValid;\n  };\n\n  const assingAgencyId = () => {\n    let domain = email.split(\"@\")[1];\n    let agencyId = 1;\n\n    for (let i = 0; i < agencyData.data.length; i++) {\n      if (agencyData.data[i].domain === domain) {\n        agencyId = agencyData.data[i].id;\n        break;\n      }\n    }\n\n    return agencyId;\n  };\n\n  const handleClick = async () => {\n    setSignuptried(true);\n\n    if (validateFields()) {\n      if (validateDomain()) {\n        let agencyId = assingAgencyId();\n        const headers = {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        };\n        axios.post(\"http://127.0.0.1:5000/broker\", JSON.stringify({\n          variables: {\n            agency_id: agencyId,\n            firstname: firstname,\n            lastname: lastname,\n            email: email,\n            broker_address: address\n          }\n        }), {\n          headers\n        }).then(response => {\n          if (!response.data.error) {\n            props.changeTab(1);\n          } else {\n            setFieldsWarning(response.data.error);\n          }\n        });\n      } else {\n        setFieldsWarning(\"This domain is not in white list\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    signuptried && validateFields();\n  }, [signuptried, validateFields]);\n\n  const handleChangeFirstname = e => {\n    setFirstname(e.target.value);\n  };\n\n  const handleChangeLastname = e => {\n    setLastname(e.target.value);\n  };\n\n  const handleChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleChangeAddress = e => {\n    setAddress(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, fieldsWarning && fieldsWarning !== '' ? /*#__PURE__*/React.createElement(StyledWarning, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 72\n    }\n  }, fieldsWarning) : emailWarning && emailWarning !== '' ? /*#__PURE__*/React.createElement(StyledWarningEmail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 74\n    }\n  }, emailWarning) : signuptried ? /*#__PURE__*/React.createElement(StyledInformation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 52\n    }\n  }, \"Form is valid\") : /*#__PURE__*/React.createElement(StyledInformation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 107\n    }\n  }, \"Please fill the form below to sign up\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChangeFirstname,\n    required: true,\n    id: \"firstname\",\n    label: \"Firstname\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChangeLastname,\n    required: true,\n    id: \"lastname\",\n    label: \"Lastname\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChangeEmail,\n    required: true,\n    id: \"email\",\n    label: \"Email\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChangeAddress,\n    required: true,\n    id: \"address\",\n    label: \"Address\",\n    helperText: \"Enter your address on one line\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, \"Sign Up\"))))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/yasarsoran/Documents/coalition-project/coalition-react/src/components/sign-up/sign-up.tsx"],"names":["React","useState","useEffect","useCallback","Button","Grid","TextField","styled","axios","StyledInformation","div","StyledContainer","StyledWarning","StyledWarningEmail","SignUp","props","firstname","setFirstname","lastname","setLastname","email","setEmail","address","setAddress","signuptried","setSignuptried","fieldsWarning","setFieldsWarning","emailWarning","setEmailWarning","domainWhiteList","setDomainWhiteList","agencyData","setAgencyData","get","then","data","console","debug","resetWarnings","validateFields","isValid","forEach","each","test","validateDomain","domain","split","assingAgencyId","agencyId","i","length","id","handleClick","headers","post","JSON","stringify","variables","agency_id","broker_address","response","error","changeTab","handleChangeFirstname","e","target","value","handleChangeLastname","handleChangeEmail","handleChangeAddress"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Button, Grid, TextField } from '@material-ui/core';\nimport styled from 'styled-components';\nimport axios, { AxiosResponse } from 'axios';\n\ninterface ICreateUserProps {\n    changeTab: (active: any) => void;\n}\n\nconst StyledInformation = styled.div`\n    padding: 20px;\n    border: 1px solid #aaa;\n    text-align: left;\n    background-color:#eee;\n`;\n\nconst StyledContainer = styled.div`\n    padding:30px;\n`;\n\nconst StyledWarning = styled.div`\n    padding:20px;\n    border: 1px solid #aaa;\n    background-color: orange;\n`;\n\nconst StyledWarningEmail = styled.div`\n    padding:20px;\n    border: 1px solid #aaa;\n    background-color: red;\n    color: white;\n`;\n\nconst SignUp = (props: ICreateUserProps) => {\n    const [firstname, setFirstname] = useState('');\n    const [lastname, setLastname] = useState('');\n    const [email, setEmail] = useState('');\n    const [address, setAddress] = useState('');\n    const [signuptried, setSignuptried] = useState(false);\n    const [fieldsWarning, setFieldsWarning] = useState('');\n    const [emailWarning, setEmailWarning] = useState('');\n    const [domainWhiteList, setDomainWhiteList] = useState({} as AxiosResponse<any>);\n    const [agencyData, setAgencyData] = useState({} as AxiosResponse<any>);\n\n    useEffect(() => {\n        axios.get(\"http://127.0.0.1:5000/domain-whitelist\").then((data) => {\n            setDomainWhiteList(data);\n            console.debug(\"fetched whitelist domains\")\n        });\n\n        axios.get(\"http://127.0.0.1:5000/agency\").then((data) => {\n            setAgencyData(data);\n            console.debug(\"fetched agency\")\n        });\n\n    }, []);\n\n\n    const resetWarnings = () => {\n        setFieldsWarning('');\n        setEmailWarning('');\n    }\n\n    const validateFields = useCallback(() => {\n        let isValid = true;\n        resetWarnings();\n        [firstname, lastname, email, address].forEach(\n            (each) => {\n                if (!each || each === '') {\n                    isValid = false;\n                    setFieldsWarning('Please make sure you filled all fields');\n                }\n            }\n        );\n\n        if (!isValid) return isValid;\n\n        if (!/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email)) {\n            isValid = false;\n            setEmailWarning('Please enter a valid email address');\n            return isValid;\n        }\n\n        return isValid;\n    }, [firstname, lastname, email, address]);\n\n    const validateDomain = () => {\n        let isValid = false;\n        let domain = email.split(\"@\")[1];\n        domainWhiteList.data.forEach((each: any) => {\n            if (each.domain === domain) {\n                isValid = true;\n            }\n        });\n\n        return isValid;\n    }\n\n    const assingAgencyId = () => {\n        let domain = email.split(\"@\")[1];\n        let agencyId = 1;\n        for (let i = 0; i < agencyData.data.length; i++) {\n            if (agencyData.data[i].domain === domain) {\n                agencyId = agencyData.data[i].id;\n                break;\n            }\n        }\n        return agencyId;\n    }\n\n    const handleClick = async () => {\n        setSignuptried(true);\n        if (validateFields()) {\n            if (validateDomain()) {\n                let agencyId = assingAgencyId();\n                const headers = {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                };\n                axios.post(\"http://127.0.0.1:5000/broker\", JSON.stringify({\n                    variables: {\n                        agency_id: agencyId,\n                        firstname: firstname,\n                        lastname: lastname,\n                        email: email,\n                        broker_address: address\n                    }\n                }), { headers }).then((response) => {\n                    if (!response.data.error) {\n                        props.changeTab(1);\n                    } else {\n                        setFieldsWarning(response.data.error);\n                    }\n                });\n            } else {\n                setFieldsWarning(\"This domain is not in white list\");\n            }\n        }\n    }\n\n    useEffect(() => { signuptried && validateFields() }, [signuptried, validateFields])\n\n    const handleChangeFirstname = (e: any) => {\n        setFirstname(e.target.value);\n    }\n\n    const handleChangeLastname = (e: any) => {\n        setLastname(e.target.value);\n    }\n\n    const handleChangeEmail = (e: any) => {\n        setEmail(e.target.value);\n    }\n\n    const handleChangeAddress = (e: any) => {\n        setAddress(e.target.value);\n    }\n\n\n    return (\n        <div>\n            <React.Fragment>\n                <StyledContainer>\n                    <Grid container spacing={3}>\n                        <Grid item md={12}>\n                            {(fieldsWarning && fieldsWarning !== '') ? <StyledWarning>{fieldsWarning}</StyledWarning> :\n                                ((emailWarning && emailWarning !== '') ? <StyledWarningEmail>{emailWarning}</StyledWarningEmail> :\n                                    (signuptried ? <StyledInformation>Form is valid</StyledInformation> : <StyledInformation>Please fill the form below to sign up</StyledInformation>)\n                                )}\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField onChange={handleChangeFirstname} required id=\"firstname\" label=\"Firstname\" fullWidth />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField onChange={handleChangeLastname} required id=\"lastname\" label=\"Lastname\" fullWidth />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                onChange={handleChangeEmail}\n                                required\n                                id=\"email\"\n                                label=\"Email\"\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                onChange={handleChangeAddress}\n                                required\n                                id=\"address\"\n                                label=\"Address\"\n                                helperText=\"Enter your address on one line\"\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid container item xs={12} justify=\"flex-end\">\n                            <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\n                                Sign Up\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </StyledContainer>\n            </React.Fragment>\n        </div>\n    );\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}